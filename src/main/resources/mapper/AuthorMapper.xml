<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.AuthorMapper">

    <resultMap id="BaseResultMap" type="com.example.demo.bean.Author">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="age" column="age" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,age
    </sql>


    <select id="searchAuthorStockById" resultType="com.example.demo.bean.Stock">
        select * from stock_stocklist where stock_id IN
        (select stock_id from stock_author  where autor_id = #{autorId})
    </select>


    <resultMap id="Author_ALL_Info" type="com.example.demo.bean.AuthorInfo">
        <id column="id" property="id"></id>
        <result property="age" column="age"></result>
        <result property="name" column="name"></result>

        <association property="house" javaType="com.example.demo.bean.House">
            <result property="city" column="city"></result>
        </association>

        <collection property="stocks" ofType="com.example.demo.bean.Stock">
            <id property="stockId" column="stock_id"></id>
            <result property="beginTime" column="begin_time"></result>
            <result property="lastTime" column="last_time"></result>
        </collection>

    </resultMap>

    <select id="searchAuthorInfo" resultMap="Author_ALL_Info">
      select a.id,a.name,a.age,h.city,s.* from author a, house h,stock_stocklist s where a.id = #{authorId}  and a.id = h.author_id and s.stock_id in (select stock_id from stock_author  where autor_id = #{autorId})
    </select>


    <resultMap id="Author_Income" type="com.example.demo.bean.AuthorInfo">
        <result column="id" property="id"></result>
        <result column="name" property="name"></result>
        <collection property="stocks"  ofType="com.example.demo.bean.Stock">
            <id property="stockId" column="stock_id"></id>

        </collection>
    </resultMap>




    <select id="searchAuthorIncome" resultMap="Author_Income">
        select a.*,s.* from
        author a left outer join stock_author sa on a.id = sa.autor_id
        left outer join stock_stocklist s on sa.stock_id = s.stock_id where a.id = #{authorId}
    </select>




    <resultMap id="Author_House" type="com.example.demo.bean.AuthorInfo">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
       <collection property="house" column="{authorId=id}" select="com.example.demo.mapper.AuthorMapper.selectHouse"/>
    </resultMap>
    <select id="selectHouse" resultType="com.example.demo.bean.House">
        SELECT * FROM house WHERE author_id = #{authorId}
    </select>
    <select id="searchAuthorHouse" resultMap="Author_House">
        SELECT * FROM author WHERE author.ID = #{authorId}
    </select>



    <resultMap id="Author_Income_test" type="com.example.demo.bean.AuthorInfo">
        <result column="author_id" property="id"/>
        <result column="name" property="name"/>
        <collection property="stocks"  ofType="com.example.demo.bean.Stock">
            <id property="stockId" column="stock_id"/>
            <result column="last_time" property="lastTime"/>
            <collection property="prices" column="{stock_id_id = stock_id}" select="searchPrices"/>
        </collection>
    </resultMap>

    <resultMap id="Prices" type="com.example.demo.bean.StockPrice">
        <id column="stock_id_id" property="stockIdId" />
        <result column="price_close" property="close"/>
        <result column="price_time" property="time"/>
    </resultMap>



    <select id="searchPrices" resultMap="Prices">
        select
            sd.stock_id_id as stock_id_id,
            sd.close as price_close,
            sd.time as price_time
        from  stock_stockdaydataadd sd where sd.stock_id_id = #{stock_id_id}
    </select>

    <select id="searchAuthorIncomeTest" resultMap="Author_Income_test">
        select
               a.id as author_id,
               a.name as name,
               s.stock_id as stock_id,
               s.last_time as last_time,
               s.begin_time as begin_time

        from author a left outer join stock_author sa on a.id = sa.autor_id
                     left outer join stock_stocklist s on sa.stock_id = s.stock_id
        where a.id = #{authorId}
    </select>

</mapper>
